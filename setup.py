import setuptools
import sys, subprocess
from os.path import dirname, exists, join

setup_dir = dirname(__file__)
git_dir = join(setup_dir, ".git")
version_file = join(setup_dir, "version.py")

# Automatically generate a version.py based on the git version
if exists(git_dir):
    p = subprocess.Popen(
        ["git", "describe", "--tags", "--long", "--dirty=-dirty"],
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE,
    )
    out, err = p.communicate()
    # Make sure the git version has at least one tag
    if err:
        print("Error: You need to create a tag for this repo to use the builder")
        sys.exit(1)

    # Convert git version to PEP440 compliant version
    # - Older versions of pip choke on local identifiers, so we can't include the git commit
    v, commits, local = out.decode("utf-8").rstrip().split("-", 2)
    if commits != "0" or "-dirty" in local:
        v = "%s.post0.dev%s" % (v, commits)

    # Create the version.py file
    with open(version_file, "w") as fp:
        fp.write("# Autogenerated by setup.py\n__version__ = '{0}'".format(v))

with open(version_file, "r") as fp:
    exec(fp.read(), globals())

with open(join(setup_dir, "README.md"), "r") as fh:
    long_description = fh.read()

setuptools.setup(
    name="robot-characterization",
    version="1.0.0",
    author="Eli Barnett, Dustin Spicuzza",
    author_email="dustin@virtualroadside.com",
    packages=["drive_characterization", "arm_characterization", "elevator_characterization", "cli"],
    entry_points={
        "console_scripts": [
            "robot-characterization = cli.cli:main"
        ],    
    },
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/robotpy/robot-characterization",
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: Apache License",
        "Operating System :: OS Independent",
    ],
    install_requires=[
        "frccontrol",
        "matplotlib",
        "pynetworktables>=2018.1.2",
        "statsmodels",
        "argcomplete"
    ],
    python_requires=">=3.4",
)
